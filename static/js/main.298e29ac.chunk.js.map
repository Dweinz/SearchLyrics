{"version":3,"sources":["components/layout/spinner.gif","components/layout/Navbar.js","context.js","components/layout/Spinner.js","components/tracks/Track.js","components/tracks/Tracks.js","components/tracks/Search.js","components/layout/Index.js","components/tracks/Lyrics.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","Context","React","createContext","reducer","state","action","type","Object","objectSpread","track_list","payload","heading","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","dispatch","setState","inherits","createClass","key","value","_this2","axios","get","process","then","res","data","message","body","catch","err","console","log","props","children","Component","Consumer","Spinner","src","spinner","alt","style","width","margin","display","Track","track","artist_name","track_name","album_name","react_router_dom","to","track_id","Tracks","undefined","Fragment","map","item","tracks_Track","Search","trackTitle","findTrack","e","preventDefault","onChange","defineProperty","target","name","onSubmit","bind","placeholder","Index","tracks_Search","Tracks_Tracks","Lyrics","lyrics","match","params","id","_this$state","keys","lyrics_body","album_id","App","context_Provider","basename","layout_Navbar","react_router","exact","path","component","index","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.298e29ac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.b95289c6.gif\";","import React from 'react'\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-dark bg-dark mb-5\">\r\n      <span className=\"navbar-brand mb-0 h1 mx-auto\">LyricFinder</span>\r\n    </nav>\r\n  );\r\n};\r\nexport default Navbar;","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'SEARCH_TRACKS':\r\n            return {\r\n                ...state,\r\n                track_list: action.payload,\r\n                heading: 'Search Results'\r\n            }\r\n            default:\r\n                return state;\r\n\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        track_list: [],\r\n        heading: 'Top 10 Tracks',\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    }\r\ncomponentDidMount(){\r\n    axios.get(\r\n        `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/chart.tracks.get?chart_name=top&page=1&page_size=10&country=us&f_has_lyrics=1&apikey=${process.env.REACT_APP_MM_KEY}`)\r\n    .then(res => {\r\n        //console.log(res.data);\r\n        this.setState({track_list: res.data.message.body.track_list});\r\n        }\r\n    )\r\n    .catch(err=> console.log(err))\r\n}  \r\n  render() {\r\n    return (\r\n    <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n    </Context.Provider>\r\n    )\r\n  }\r\n}\r\nexport const Consumer = Context.Consumer;\r\n","import React from 'react'\r\nimport spinner from './spinner.gif'\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <img\r\n      src={spinner}\r\n      alt=\"Loading...\"\r\n      style={{width: '200px', margin: ' 40px auto', display: 'block'}}\r\n      > \r\n      </img>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Track = (props) => {\r\n    const {track} = props;\r\n  return (\r\n    <div className=\"col-md-6\">\r\n      <div className=\"card mb-4 shadow-sm\">\r\n          <div className=\"card-body\">\r\n              <h5>{track.artist_name}</h5>\r\n              <p className=\"card-text\">\r\n                  <strong><i className=\"fas fa-play\"></i> Track </strong>: {track.track_name}\r\n                  <br/>\r\n                  <strong><i className=\"fas fa-compact-disc\"></i> Album </strong>: {track.album_name}\r\n              </p>\r\n              <Link to={`lyrics/track/${track.track_id}`} className=\"btn btn-dark btn-block\"> \r\n              <i className=\"fas fa-chevron-right\"></i>  View Lyrics\r\n              </Link>\r\n\r\n          </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Track;\r\n","import React, { Component } from 'react'\r\nimport {Consumer} from '../../context'\r\nimport Spinner from '../layout/Spinner'\r\nimport Track from '../tracks/Track'\r\nexport default class Tracks extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const {track_list, heading} = value;\r\n          if(track_list === undefined || track_list.length ===0){\r\n            return <Spinner/>\r\n          }\r\n          else {\r\n            return(\r\n              <React.Fragment>\r\n                <h3 className=\"text-center mb-4\">{heading}</h3>\r\n              <div className=\"row\">\r\n                {track_list.map(item => (\r\n                  <Track key={item.track.track_id} track={item.track}/>\r\n                ))}\r\n              </div>\r\n              </React.Fragment>\r\n            )\r\n          }\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport {Consumer} from '../../context'\r\n\r\nclass Search extends Component {\r\n    state = {\r\n        trackTitle: ''\r\n    }\r\n\r\n    findTrack = (dispatch, e) => {\r\n        e.preventDefault();\r\n        axios.get(\r\n            `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.search?q_track=${this.state.trackTitle}&page_size=10&page=1&s_track_rating=desc&apikey=${process.env.REACT_APP_MM_KEY}`)\r\n        .then(res => {\r\n            console.log(res.data.message.body.track_list)\r\n            dispatch({\r\n                type: 'SEARCH_TRACKS',\r\n                payload: res.data.message.body.track_list\r\n            });\r\n            }\r\n        )\r\n        .catch(err=> console.log(err))\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n  render() {\r\n    return (\r\n    <Consumer>\r\n        {value => {\r\n            const { dispatch } = value;\r\n            console.log(value);\r\n            return (\r\n                <div className=\"card card-body mb-4 p-4\">\r\n                    <h1 className=\"display-4 text-center\">\r\n                        <i className=\"fas fa-music\">\r\n                        </i>\r\n                        Search for a Song\r\n                    </h1>\r\n                    <p className=\"lead text-center\">Get the lyrics for your favorite song</p>\r\n                    <form onSubmit={this.findTrack.bind(this,dispatch)}>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Song title..\" name=\"trackTitle\" value={this.state.trackTitle} onChange={this.onChange}></input>\r\n\r\n                        </div>\r\n                        <button className=\"btn btn-primary btn-lg btn-block mb-5\" type=\"submit\">\r\n                        Get Track Lyrics\r\n                        </button>\r\n                    </form>\r\n                   \r\n                </div>\r\n            )\r\n        }}\r\n    </Consumer>\r\n    )\r\n  }\r\n}\r\nexport default Search;\r\n","import React from 'react';\r\nimport Tracks from '../tracks/Tracks';\r\nimport Search from '../tracks/Search';\r\n\r\n const Index = () => {\r\n  return (\r\n    <React.Fragment>\r\n        <Search />\r\n        <Tracks />\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default Index;","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport {Link } from 'react-router-dom'\r\nimport Spinner from '../layout/Spinner'\r\n\r\nclass Lyrics extends Component {\r\n    state = {\r\n        track: {},\r\n        lyrics: {}\r\n    }\r\n    componentDidMount(){\r\n        axios.get(\r\n            `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${this.props.match.params.id}&apikey=${process.env.REACT_APP_MM_KEY}`)\r\n        .then(res => {\r\n            console.log(res.data);\r\n            this.setState({lyrics: res.data.message.body.lyrics});\r\n            return axios.get(\r\n                `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.get?track_id=${this.props.match.params.id}&apikey=${process.env.REACT_APP_MM_KEY}`);\r\n            }\r\n        )\r\n        .then(res => {\r\n            this.setState({track: res.data.message.body.track});\r\n\r\n        })\r\n        .catch(err=> console.log(err))\r\n    }\r\n  render() {\r\n      const { track, lyrics} = this.state;\r\n        if(track === undefined || lyrics === undefined || Object.keys(track).length === 0 ||Object.keys(lyrics).length === 0  )  {\r\n            return <Spinner />\r\n        }\r\n        else {\r\n            return(\r\n                <React.Fragment>\r\n                    <Link to=\"/\" className=\"btn btn-dark btn-sm mb-4\">Go Back</Link>\r\n                    <div className=\"card\">\r\n                        <h5 className=\"card-header\">\r\n                            {track.track_name} by {''}\r\n                            <span className=\"text-secondary\">{track.artist_name}</span>\r\n                        </h5>\r\n                        <div className=\"card-body\">\r\n                            <p className=\"card-text\">{lyrics.lyrics_body}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <ul className=\"list-group mt-3\">\r\n                        <li className=\"list-group-item\">\r\n                        <strong>\r\n                            Album ID\r\n                        </strong>: {track.album_id}\r\n                        </li>\r\n                    </ul>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n  }\r\n}\r\nexport default Lyrics;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport './App.css';\nimport Navbar from './components/layout/Navbar'\nimport index from './components/layout/Index'\nimport Lyrics from './components/tracks/Lyrics'\nimport {Provider} from './context'\n\nfunction App() {\n  return (\n    <Provider>\n      <Router basename={process.env.PUBLIC_URL}>\n        <React.Fragment>\n        <Navbar/>\n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/\" component={index}/>\n            <Route exact path=\"/lyrics/track/:id\" component={Lyrics}/>\n          </Switch>\n        </div>\n        </React.Fragment>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}